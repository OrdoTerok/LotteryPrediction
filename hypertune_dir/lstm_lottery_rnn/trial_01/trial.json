{"trial_id": "01", "hyperparameters": {"space": [{"class_name": "Choice", "config": {"name": "rnn_units", "default": 32, "conditions": [], "values": [32, 64, 128], "ordered": true}}, {"class_name": "Choice", "config": {"name": "rnn_layers", "default": 1, "conditions": [], "values": [1, 2, 3], "ordered": true}}, {"class_name": "Float", "config": {"name": "rnn_dropout", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Boolean", "config": {"name": "rnn_bidirectional", "default": false, "conditions": []}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "adam", "conditions": [], "values": ["adam", "rmsprop", "nadam"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.001, "conditions": [], "values": [0.001, 0.0005, 0.0001, 5e-05], "ordered": true}}, {"class_name": "Choice", "config": {"name": "batch_size", "default": 16, "conditions": [], "values": [16, 32, 64], "ordered": true}}], "values": {"rnn_units": 128, "rnn_layers": 2, "rnn_dropout": 0.30000000000000004, "rnn_bidirectional": true, "optimizer": "adam", "learning_rate": 0.001, "batch_size": 16}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\Sean\\Documents\\Code Projects\\LotteryPrediction\\venv\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sean\\Documents\\Code Projects\\LotteryPrediction\\venv\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\Sean\\Documents\\Code Projects\\LotteryPrediction\\venv\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"C:\\Users\\Sean\\Documents\\Code Projects\\LotteryPrediction\\venv\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n  File \"C:\\Users\\Sean\\Documents\\Code Projects\\LotteryPrediction\\venv\\Lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sean\\Documents\\Code Projects\\LotteryPrediction\\venv\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\Sean\\Documents\\Code Projects\\LotteryPrediction\\venv\\Lib\\site-packages\\keras\\src\\backend\\tensorflow\\nn.py\", line 662, in categorical_crossentropy\n    raise ValueError(\n    ...<3 lines>...\n    )\nValueError: Arguments `target` and `output` must have the same rank (ndim). Received: target.shape=(None, 1, 26), output.shape=(None, 26)\n"}